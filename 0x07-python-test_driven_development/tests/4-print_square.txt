#!/usr/bin/python3
"""Defines test cases for the print_square function."""


import unittest
from io import StringIO
from unittest.mock import patch
from print_square import print_square


class PrintSquareTestCase(unittest.TestCase):
    """Test cases for the print_square function."""

    def test_print_square(self):
        """Test print_square with a positive size."""
        expected_output = "####\n####\n####\n####"
        with patch("sys.stdout", new=StringIO()) as fake_out:
            print_square(4)
            self.assertEqual(fake_out.getvalue().strip(), expected_output)

    def test_print_square_zero_size(self):
        """Test print_square with size 0."""
        expected_output = ""
        with patch("sys.stdout", new=StringIO()) as fake_out:
            print_square(0)
            self.assertEqual(fake_out.getvalue().strip(), expected_output)

    def test_print_square_negative_size(self):
        """Test print_square with negative size."""
        with self.assertRaises(ValueError):
            print_square(-3)

    def test_print_square_invalid_type(self):
        """Test print_square with invalid type for size."""
        with self.assertRaises(TypeError):
            print_square("4")

        with self.assertRaises(TypeError):
            print_square(4.5)


if __name__ == "__main__":
    unittest.main()
